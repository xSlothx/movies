SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE C_SP_Delivery @w_id			INT, @o_carrier_id	SMALLINT as declare 	@d_id		TINYINT, 	@o_id		INT, 	@c_id		INT, 	@total		NUMERIC(12,2), 	@oid1		INT, 	@oid2		INT, 	@oid3		INT, 	@oid4		INT, 	@oid5		INT, 	@oid6		INT, 	@oid7		INT, 	@oid8		INT, 	@oid9		INT, 	@oid10		INT  select @d_id = 0 begin transaction delivery while (@d_id < 10) begin 	select @d_id = @d_id + 1, 		@total = 0, 		@o_id = 0 	select top 1 @o_id = no_o_id 	from C_New_Order with (serializable updlock) 	where no_w_id = @w_id 	and no_d_id = @d_id 	order by no_o_id 	if (@@rowcount <> 0) 	begin 		delete C_New_Order 		where no_w_id = @w_id 		and no_d_id = @d_id 		and no_o_id = @o_id 		update C_Order 		set o_carrier_id = @o_carrier_id, 			@c_id = o_c_id 		where o_w_id = @w_id 		and o_d_id = @d_id 		and o_id = @o_id 		update C_Order_Line 		set ol_delivery_d = getdate(), 			@total = @total + ol_amount 		where ol_w_id = @w_id 		and ol_d_id = @d_id 		and ol_o_id = @o_id 		update C_Customer 		set c_balance = c_balance + @total, 			c_delivery_cnt = c_delivery_cnt + 1 		where c_w_id = @w_id 		and c_d_id = @d_id 		and c_id = @c_id 	end 	select @oid1 = case @d_id when 1 then @o_id else @oid1 end, 		@oid2 = case @d_id when 2 then @o_id else @oid2 end, 		@oid3 = case @d_id when 3 then @o_id else @oid3 end, 		@oid4 = case @d_id when 4 then @o_id else @oid4 end, 		@oid5 = case @d_id when 5 then @o_id else @oid5 end, 		@oid6 = case @d_id when 6 then @o_id else @oid6 end, 		@oid7 = case @d_id when 7 then @o_id else @oid7 end, 		@oid8 = case @d_id when 8 then @o_id else @oid8 end, 		@oid9 = case @d_id when 9 then @o_id else @oid9 end, 		@oid10 = case @d_id when 10 then @o_id else @oid10 end end commit transaction delivery select @oid1, 	@oid2, 	@oid3, 	@oid4, 	@oid5, 	@oid6, 	@oid7, 	@oid8, 	@oid9, 	@oid10 
GO
