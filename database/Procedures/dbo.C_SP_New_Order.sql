SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE C_SP_New_Order @w_id			INT, @d_id			TINYINT, @c_id			INT, @o_ol_cnt		TINYINT, @o_all_local	TINYINT, @i_id1	INT = 0, @s_w_id1	INT = 0, @ol_qty1	SMALLINT = 0, @i_id2	INT = 0, @s_w_id2	INT = 0, @ol_qty2	SMALLINT = 0, @i_id3	INT = 0, @s_w_id3	INT = 0, @ol_qty3	SMALLINT = 0, @i_id4	INT = 0, @s_w_id4	INT = 0, @ol_qty4	SMALLINT = 0, @i_id5	INT = 0, @s_w_id5	INT = 0, @ol_qty5	SMALLINT = 0, @i_id6	INT = 0, @s_w_id6	INT = 0, @ol_qty6	SMALLINT = 0, @i_id7	INT = 0, @s_w_id7	INT = 0, @ol_qty7	SMALLINT = 0, @i_id8	INT = 0, @s_w_id8	INT = 0, @ol_qty8	SMALLINT = 0, @i_id9	INT = 0, @s_w_id9	INT = 0, @ol_qty9	SMALLINT = 0, @i_id10	INT = 0, @s_w_id10	INT = 0, @ol_qty10	SMALLINT = 0, @i_id11	INT = 0, @s_w_id11	INT = 0, @ol_qty11	SMALLINT = 0, @i_id12	INT = 0, @s_w_id12	INT = 0, @ol_qty12	SMALLINT = 0, @i_id13	INT = 0, @s_w_id13	INT = 0, @ol_qty13	SMALLINT = 0, @i_id14	INT = 0, @s_w_id14	INT = 0, @ol_qty14	SMALLINT = 0, @i_id15	INT = 0, @s_w_id15	INT = 0, @ol_qty15	SMALLINT = 0 as declare 	@w_tax			NUMERIC(4,4), 	@d_tax			NUMERIC(4,4), 	@c_last			CHAR(16), 	@c_credit		CHAR(2), 	@c_discount		NUMERIC(4,4), 	@i_price		NUMERIC(5,2), 	@i_name			CHAR(24), 	@i_data			CHAR(50), 	@o_entry_d		DATETIME, 	@remote_flag	INT, 	@s_quantity		SMALLINT, 	@s_data			CHAR(50), 	@s_dist			CHAR(24), 	@li_no			INT, 	@o_id			INT, 	@commit_flag	TINYINT, 	@li_id			INT, 	@li_s_w_id		INT, 	@li_qty			SMALLINT, 	@ol_number		INT, 	@c_id_local		INT begin begin transaction neworder 	select @o_entry_d = getdate() 	update C_District 	set @d_tax = d_tax, 		@o_id = d_next_o_id, 		d_next_o_id = d_next_o_id + 1 	where d_w_id = @w_id 	and d_id = @d_id 	select @li_no = 0 	select @commit_flag = 1 	while (@li_no < @o_ol_cnt) 	begin 		select @li_no = @li_no + 1 		select @li_id = case @li_no 		when 1 then @i_id1 		when 2 then @i_id2 		when 3 then @i_id3 		when 4 then @i_id4 		when 5 then @i_id5 		when 6 then @i_id6 		when 7 then @i_id7 		when 8 then @i_id8 		when 9 then @i_id9 		when 10 then @i_id10 		when 11 then @i_id11 		when 12 then @i_id12 		when 13 then @i_id13 		when 14 then @i_id14 		when 15 then @i_id15 		end 		select @li_s_w_id = case @li_no 		when 1 then @s_w_id1 		when 2 then @s_w_id2 		when 3 then @s_w_id3 		when 4 then @s_w_id4 		when 5 then @s_w_id5 		when 6 then @s_w_id6 		when 7 then @s_w_id7 		when 8 then @s_w_id8 		when 9 then @s_w_id9 		when 10 then @s_w_id10 		when 11 then @s_w_id11 		when 12 then @s_w_id12 		when 13 then @s_w_id13 		when 14 then @s_w_id14 		when 15 then @s_w_id15 		end 		select @li_qty = case @li_no 		when 1 then @ol_qty1 		when 2 then @ol_qty2 		when 3 then @ol_qty3 		when 4 then @ol_qty4 		when 5 then @ol_qty5 		when 6 then @ol_qty6 		when 7 then @ol_qty7 		when 8 then @ol_qty8 		when 9 then @ol_qty9 		when 10 then @ol_qty10 		when 11 then @ol_qty11 		when 12 then @ol_qty12 		when 13 then @ol_qty13 		when 14 then @ol_qty14 		when 15 then @ol_qty15 		end 		select	@i_price = i_price, 				@i_name = i_name, 				@i_data = i_data 		from C_Item with (tablock repeatableread) 		where i_id = @li_id 		if (@@rowcount > 0) 		begin 			update C_Stock 			set s_ytd = s_ytd+@li_qty, 				@s_quantity = s_quantity, 				s_quantity = s_quantity - @li_qty + case when (s_quantity - @li_qty < 10) then 91 else 0 end, 				s_order_cnt = s_order_cnt + 1, 				s_remote_cnt = s_remote_cnt +  case when (@li_s_w_id = @w_id) then 0 else 1 end, 				@s_data = s_data, 				@s_dist = case @d_id 					when 1 then s_dist_01 					when 2 then s_dist_02 					when 3 then s_dist_03 					when 4 then s_dist_04 					when 5 then s_dist_05 					when 6 then s_dist_06 					when 7 then s_dist_07 					when 8 then s_dist_08 					when 9 then s_dist_09 					when 10 then s_dist_10 					end 			where s_i_id = @li_id 			and s_w_id = @li_s_w_id 			insert into C_Order_Line (ol_o_id, ol_d_id, ol_w_id, ol_number, 				ol_i_id, ol_supply_w_id, ol_delivery_d, ol_quantity, ol_amount, 				ol_dist_info) values (				@o_id, @d_id, @w_id, @li_no, @li_id, 				@li_s_w_id, '18891231', @li_qty, 				@i_price * @li_qty, @s_dist ) 			select @i_name, 				@s_quantity, 				b_g = case when ((patindex('%ORIGINAL%',@i_data) > 0) and (patindex('%ORIGINAL%',@s_data) > 0) ) then'B' else 'G' end, 				@i_price, 				@i_price * @li_qty 		end 		else 		begin 			select '',0,'',0,0 			select @commit_flag = 0 		end 	end 	select @c_last = c_last, 		@c_discount = c_discount, 		@c_credit = c_credit, 		@c_id_local = c_id 	from C_Customer with (repeatableread) 	where c_id = @c_id 	and c_w_id = @w_id 	and c_d_id = @d_id 	insert into C_Order  (o_id, o_d_id, o_w_id, o_c_id, o_entry_d, 		o_carrier_id, o_ol_cnt, o_all_local) 		values ( 		@o_id, @d_id, @w_id, @c_id_local, @o_entry_d, 0, 		@o_ol_cnt, @o_all_local) 	insert into C_New_Order (no_o_id, no_d_id, no_w_id) values ( 		@o_id, @d_id, @w_id) 	select @w_tax = w_tax 	from C_Warehouse with (repeatableread) 	where w_id = @w_id 	if (@commit_flag = 1) 		commit transaction neworder 	else 		rollback transaction neworder 	select @w_tax, 		@d_tax, 		@o_id, 		@c_last, 		@c_discount, 		@c_credit, 		@o_entry_d, 		@commit_flag end 
GO
